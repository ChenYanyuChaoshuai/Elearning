<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.java.mapper.ParagraphMapper">
  <resultMap id="BaseResultMap" type="cn.java.entity.Paragraph">
    <id column="pid" jdbcType="INTEGER" property="pid" />
    <result column="paragraph_number" jdbcType="INTEGER" property="paragraphNumber" />
    <result column="paragraph_knowledge" jdbcType="INTEGER" property="paragraphKnowledge" />
    <result column="paragraph_type" jdbcType="INTEGER" property="paragraphType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.java.entity.Paragraph">
    <result column="paragraph_content" jdbcType="LONGVARCHAR" property="paragraphContent" />
  </resultMap>
  <sql id="Base_Column_List">
    pid, paragraph_number, paragraph_knowledge, paragraph_type
  </sql>
  <sql id="Blob_Column_List">
    paragraph_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from paragraph
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from paragraph
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="pid" keyProperty="pid" parameterType="cn.java.entity.Paragraph" useGeneratedKeys="true">
    insert into paragraph (paragraph_number, paragraph_knowledge, 
      paragraph_type, paragraph_content)
    values (#{paragraphNumber,jdbcType=INTEGER}, #{paragraphKnowledge,jdbcType=INTEGER}, 
      #{paragraphType,jdbcType=INTEGER}, #{paragraphContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="pid" keyProperty="pid" parameterType="cn.java.entity.Paragraph" useGeneratedKeys="true">
    insert into paragraph
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paragraphNumber != null">
        paragraph_number,
      </if>
      <if test="paragraphKnowledge != null">
        paragraph_knowledge,
      </if>
      <if test="paragraphType != null">
        paragraph_type,
      </if>
      <if test="paragraphContent != null">
        paragraph_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paragraphNumber != null">
        #{paragraphNumber,jdbcType=INTEGER},
      </if>
      <if test="paragraphKnowledge != null">
        #{paragraphKnowledge,jdbcType=INTEGER},
      </if>
      <if test="paragraphType != null">
        #{paragraphType,jdbcType=INTEGER},
      </if>
      <if test="paragraphContent != null">
        #{paragraphContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.java.entity.Paragraph">
    update paragraph
    <set>
      <if test="paragraphNumber != null">
        paragraph_number = #{paragraphNumber,jdbcType=INTEGER},
      </if>
      <if test="paragraphKnowledge != null">
        paragraph_knowledge = #{paragraphKnowledge,jdbcType=INTEGER},
      </if>
      <if test="paragraphType != null">
        paragraph_type = #{paragraphType,jdbcType=INTEGER},
      </if>
      <if test="paragraphContent != null">
        paragraph_content = #{paragraphContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.java.entity.Paragraph">
    update paragraph
    set paragraph_number = #{paragraphNumber,jdbcType=INTEGER},
      paragraph_knowledge = #{paragraphKnowledge,jdbcType=INTEGER},
      paragraph_type = #{paragraphType,jdbcType=INTEGER},
      paragraph_content = #{paragraphContent,jdbcType=LONGVARCHAR}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.java.entity.Paragraph">
    update paragraph
    set paragraph_number = #{paragraphNumber,jdbcType=INTEGER},
      paragraph_knowledge = #{paragraphKnowledge,jdbcType=INTEGER},
      paragraph_type = #{paragraphType,jdbcType=INTEGER}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
</mapper>