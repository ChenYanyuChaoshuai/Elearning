<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.java.mapper.MessageMapper">
  <resultMap id="BaseResultMap" type="cn.java.entity.Message">
    <id column="mid" jdbcType="INTEGER" property="mid" />
    <result column="message_from" jdbcType="INTEGER" property="messageFrom" />
    <result column="message_to" jdbcType="INTEGER" property="messageTo" />
    <result column="message_date" jdbcType="DATE" property="messageDate" />
    <result column="message_read" jdbcType="INTEGER" property="messageRead" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.java.entity.Message">
    <result column="message_content" jdbcType="LONGVARCHAR" property="messageContent" />
  </resultMap>
  <sql id="Base_Column_List">
    mid, message_from, message_to, message_date, message_read
  </sql>
  <sql id="Blob_Column_List">
    message_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where mid = #{mid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where mid = #{mid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="mid" keyProperty="mid" parameterType="cn.java.entity.Message" useGeneratedKeys="true">
    insert into message (message_from, message_to, message_date, 
      message_read, message_content)
    values (#{messageFrom,jdbcType=INTEGER}, #{messageTo,jdbcType=INTEGER}, #{messageDate,jdbcType=DATE}, 
      #{messageRead,jdbcType=INTEGER}, #{messageContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="mid" keyProperty="mid" parameterType="cn.java.entity.Message" useGeneratedKeys="true">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageFrom != null">
        message_from,
      </if>
      <if test="messageTo != null">
        message_to,
      </if>
      <if test="messageDate != null">
        message_date,
      </if>
      <if test="messageRead != null">
        message_read,
      </if>
      <if test="messageContent != null">
        message_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageFrom != null">
        #{messageFrom,jdbcType=INTEGER},
      </if>
      <if test="messageTo != null">
        #{messageTo,jdbcType=INTEGER},
      </if>
      <if test="messageDate != null">
        #{messageDate,jdbcType=DATE},
      </if>
      <if test="messageRead != null">
        #{messageRead,jdbcType=INTEGER},
      </if>
      <if test="messageContent != null">
        #{messageContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.java.entity.Message">
    update message
    <set>
      <if test="messageFrom != null">
        message_from = #{messageFrom,jdbcType=INTEGER},
      </if>
      <if test="messageTo != null">
        message_to = #{messageTo,jdbcType=INTEGER},
      </if>
      <if test="messageDate != null">
        message_date = #{messageDate,jdbcType=DATE},
      </if>
      <if test="messageRead != null">
        message_read = #{messageRead,jdbcType=INTEGER},
      </if>
      <if test="messageContent != null">
        message_content = #{messageContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where mid = #{mid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.java.entity.Message">
    update message
    set message_from = #{messageFrom,jdbcType=INTEGER},
      message_to = #{messageTo,jdbcType=INTEGER},
      message_date = #{messageDate,jdbcType=DATE},
      message_read = #{messageRead,jdbcType=INTEGER},
      message_content = #{messageContent,jdbcType=LONGVARCHAR}
    where mid = #{mid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.java.entity.Message">
    update message
    set message_from = #{messageFrom,jdbcType=INTEGER},
      message_to = #{messageTo,jdbcType=INTEGER},
      message_date = #{messageDate,jdbcType=DATE},
      message_read = #{messageRead,jdbcType=INTEGER}
    where mid = #{mid,jdbcType=INTEGER}
  </update>
</mapper>